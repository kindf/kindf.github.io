<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>skynet相关 - 分类 - kindf</title>
        <link>http://example.org/categories/skynet%E7%9B%B8%E5%85%B3/</link>
        <description>skynet相关 - 分类 - kindf</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 14 Nov 2023 10:45:32 &#43;0800</lastBuildDate><atom:link href="http://example.org/categories/skynet%E7%9B%B8%E5%85%B3/" rel="self" type="application/rss+xml" /><item>
    <title>skynet的定时器</title>
    <link>http://example.org/posts/skynet/skynet_timer/</link>
    <pubDate>Tue, 14 Nov 2023 10:45:32 &#43;0800</pubDate><author>
                        <name>kindf</name><uri>https://github.com/kindf</uri></author><guid>http://example.org/posts/skynet/skynet_timer/</guid>
    <description><![CDATA[简析 skyent 用 5 个链表数组来存储定时事件，分别是 near[256] 和 t[4]，其中 near 数组用来存放即将到期的定时事件，t[0] ~ t[3] 数组分别存放不同时间段的定时事件 插]]></description>
</item><item>
    <title>skynet的网络</title>
    <link>http://example.org/posts/skynet/skynet_net/</link>
    <pubDate>Wed, 01 Nov 2023 16:56:32 &#43;0800</pubDate><author>
                        <name>kindf</name><uri>https://github.com/kindf</uri></author><guid>http://example.org/posts/skynet/skynet_net/</guid>
    <description><![CDATA[115 struct socket_server { 116 volatile uint64_t time; 117 int reserve_fd; // for EMFILE 118 int recvctrl_fd; 119 int sendctrl_fd; 120 int checkctrl; 121 poll_fd event_fd; 122 ATOM_INT alloc_id; 123 int event_n; 124 int event_index; 125 struct socket_object_interface soi; 126 struct event ev[MAX_EVENT]; 127 struct socket slot[MAX_SOCKET]; 128 char buffer[MAX_INFO]; 129 uint8_t udpbuffer[MAX_UDP_PACKAGE]; 130 fd_set rfds; 131 }; skynet启动时会调用]]></description>
</item><item>
    <title>skynet的callback</title>
    <link>http://example.org/posts/skynet/skynet_cb/</link>
    <pubDate>Tue, 19 Sep 2023 16:44:37 &#43;0800</pubDate><author>
                        <name>kindf</name><uri>https://github.com/kindf</uri></author><guid>http://example.org/posts/skynet/skynet_cb/</guid>
    <description><![CDATA[skynet 中 c 端绑定 lua 函数的做法 简述 创建新的 userdata 创建一个新 thread 对象，把 callback function 至于这个 thread 中 把新 thread 绑定 userdata 的 uservalue 上（防止 gc） userdata 的 C 指针放到 C 端，用于 callback 调用 callback function 放]]></description>
</item></channel>
</rss>
